name: docs-ecutable - Scheduler

on:
  # So we can trigger manually if needed
  workflow_dispatch:
  # To confirm any changes to docs build successfully, without deploying them
  pull_request:
    branches:
      - main
      - "release-*"
    paths:
      - "docs/content/Coding Milestones/PoC2023q1/kubestellar-scheduler.md"
      - "docs/content/Coding Milestones/PoC2023q1/kubestellar-scheduler-subs/**"
      - "docs/content/Coding Milestones/PoC2023q1/common-subs/**"
      - ".github/workflows/docs-ecutable-scheduler.yml"
      - "docs/scripts/docs-ecutable.sh"
  push:
    branches:
      - main
      - "release-*"
    paths:
      - "docs/content/Coding Milestones/PoC2023q1/kubestellar-scheduler.md"
      - "docs/content/Coding Milestones/PoC2023q1/kubestellar-scheduler-subs/**"
      - "docs/content/Coding Milestones/PoC2023q1/common-subs/**"
      - ".github/workflows/docs-ecutable-scheduler.yml"
      - "docs/scripts/docs-ecutable.sh"

env:
  docs-ecutable-filename: scheduler
  docs-ecutable-md-filename: "'docs/content/Coding Milestones/PoC2023q1/kubestellar-scheduler.md'"
  GH_TOKEN: ${{ secrets.GH_ALL_PROJECT_TOKEN }}

permissions:
  contents: write

jobs:
  docs-ecutable:
    name: docs-ecutable - for scheduler e2e
    runs-on: ubuntu-latest
    outputs:
      docs-ecutable-filename: ${{ steps.step1.outputs.docs-ecutable-filename }}
    steps:
      - id: step1
        run: echo "docs-ecutable-filename=${{ env.docs-ecutable-filename }}" >> "$GITHUB_OUTPUT"

      - run: echo ${{ steps.step1.outputs.docs-ecutable-filename }}

      - uses: actions/checkout@v3

      - name: echo fetching workflow_dispatch branch
        run: git fetch origin ${GITHUB_REF##*/}
        # run: echo running on branch ${GITHUB_REF##*/}
        if: github.event_name != 'pull_request' && github.event_name != 'push'

      - name: echo fetching push or pull_request branch
        run: git fetch origin ${{ github.ref_name }}
        # run: echo running on branch ${{ github.ref_name }}
        if: github.event_name == 'push' || github.event_name != 'pull_request'

      - uses: actions/setup-go@v4
        with:
          go-version: v1.19
          cache: true

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        id: install
  
      - run: |
          make MANIFEST="${{ env.docs-ecutable-md-filename }}" \
          docs-ecutable

  elapsed-time-collector:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_ALL_PROJECT_TOKEN }}
      docs-ecutable-filename: ${{needs.docs-ecutable.outputs.docs-ecutable-filename}}
    needs: docs-ecutable
    steps:
      - run: echo "${{ env.docs-ecutable-filename }}"

      - uses: actions/checkout@v3
        with:
          ref: main

      - run: git rev-parse --abbrev-ref HEAD 

      - run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "MD_CONTENT<<$EOF" >> "$GITHUB_ENV"
          make FILENAME='${{ env.docs-ecutable-filename }}' write-time-to-file >> "$GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"
        id: run_make

      - uses: actions/checkout@v3
        with:
          ref: gh-pages

      # - run: |
      #     echo ${{ env.MD_CONTENT }}

      - run: |
          cat <<EOF > elapsed-time/${{ env.docs-ecutable-filename }}.dmd
          ${{ env.MD_CONTENT }}
          EOF
          echo "cat elapsed-time/${{ env.docs-ecutable-filename }}.dmd"
          cat elapsed-time/${{ env.docs-ecutable-filename }}.dmd
          
      - run: git config --global user.email "kubestellar@kubestellar-dev@google.groups.com" && git config --global user.name "KubeStellar" && git add . && git commit -m "Add changes" && git push origin gh-pages
